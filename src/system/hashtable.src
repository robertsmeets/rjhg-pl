class hashtable 
{
    a,claimed,filled
}


method hashtable.add(k,v)
{
    hk = self.f(k);
    e = helement();
    e.setKey(k);
    e.setValue(v);
    e.setNext(null);
    element = a[hk];
    if (element == null)
    {
       a.set(hk,e);
    }
    else
    {
       e.setNext(element);
       a.set(hk,e);
    };
}

method hashtable.printme()
{
    i = 0;
    while i < claimed
    {
       element = a[i];
       while element != null
       {
           element = element.getNext();
       };
       i = i + 1;
    }
     
    filled = filled + 1;
}

method hashtable.init()
{
   a = array();
   a.add(null);
   a.add(null);
   a.add(null);
   a.add(null);
   a.add(null);
   claimed=5;
   filled=0;
}

/**
 *
 * calculate a hash value for a string
 *
 **/
method hashtable.f(x)
{
   hash = 5381;
   sz = x.size(); 
   i = 0;
   while (i < sz)
   {
      c = x[i];
      hash = hash * 33 + c;
      i = i + 1;
   };
   return hash % claimed;
}

method hashtable.get(k)
{
   hk = self.f(k);
   element = a[hk];
   while (element != null)
   {
      if element.getKey() == k { return element.getValue(); };
      element = element.getNext(); 
   };
   return null;
}
